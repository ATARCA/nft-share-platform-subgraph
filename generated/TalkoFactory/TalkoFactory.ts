// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EndorseERC721ProxyCreated extends ethereum.Event {
  get params(): EndorseERC721ProxyCreated__Params {
    return new EndorseERC721ProxyCreated__Params(this);
  }
}

export class EndorseERC721ProxyCreated__Params {
  _event: EndorseERC721ProxyCreated;

  constructor(event: EndorseERC721ProxyCreated) {
    this._event = event;
  }

  get _eproxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _name(): string {
    return this._event.parameters[2].value.toString();
  }

  get _symbol(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class LikeERC721ProxyCreated extends ethereum.Event {
  get params(): LikeERC721ProxyCreated__Params {
    return new LikeERC721ProxyCreated__Params(this);
  }
}

export class LikeERC721ProxyCreated__Params {
  _event: LikeERC721ProxyCreated;

  constructor(event: LikeERC721ProxyCreated) {
    this._event = event;
  }

  get _lproxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _name(): string {
    return this._event.parameters[2].value.toString();
  }

  get _symbol(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class ShareableERC721ProxyCreated extends ethereum.Event {
  get params(): ShareableERC721ProxyCreated__Params {
    return new ShareableERC721ProxyCreated__Params(this);
  }
}

export class ShareableERC721ProxyCreated__Params {
  _event: ShareableERC721ProxyCreated;

  constructor(event: ShareableERC721ProxyCreated) {
    this._event = event;
  }

  get _sproxy(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _name(): string {
    return this._event.parameters[2].value.toString();
  }

  get _symbol(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class TalkoFactory extends ethereum.SmartContract {
  static bind(address: Address): TalkoFactory {
    return new TalkoFactory("TalkoFactory", address);
  }

  EndorseERC721BeaconAddress(): Address {
    let result = super.call(
      "EndorseERC721BeaconAddress",
      "EndorseERC721BeaconAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_EndorseERC721BeaconAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "EndorseERC721BeaconAddress",
      "EndorseERC721BeaconAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  LikeERC721BeaconAddress(): Address {
    let result = super.call(
      "LikeERC721BeaconAddress",
      "LikeERC721BeaconAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_LikeERC721BeaconAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "LikeERC721BeaconAddress",
      "LikeERC721BeaconAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ShareableERC721BeaconAddress(): Address {
    let result = super.call(
      "ShareableERC721BeaconAddress",
      "ShareableERC721BeaconAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_ShareableERC721BeaconAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ShareableERC721BeaconAddress",
      "ShareableERC721BeaconAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createEndorseERC721Proxy(
    _name: string,
    _symbol: string,
    _owner: Address
  ): Address {
    let result = super.call(
      "createEndorseERC721Proxy",
      "createEndorseERC721Proxy(string,string,address):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_symbol),
        ethereum.Value.fromAddress(_owner)
      ]
    );

    return result[0].toAddress();
  }

  try_createEndorseERC721Proxy(
    _name: string,
    _symbol: string,
    _owner: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createEndorseERC721Proxy",
      "createEndorseERC721Proxy(string,string,address):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_symbol),
        ethereum.Value.fromAddress(_owner)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createLikeERC721Proxy(
    _name: string,
    _symbol: string,
    _owner: Address
  ): Address {
    let result = super.call(
      "createLikeERC721Proxy",
      "createLikeERC721Proxy(string,string,address):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_symbol),
        ethereum.Value.fromAddress(_owner)
      ]
    );

    return result[0].toAddress();
  }

  try_createLikeERC721Proxy(
    _name: string,
    _symbol: string,
    _owner: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createLikeERC721Proxy",
      "createLikeERC721Proxy(string,string,address):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_symbol),
        ethereum.Value.fromAddress(_owner)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createShareableERC721Proxy(
    _name: string,
    _symbol: string,
    _owner: Address
  ): Address {
    let result = super.call(
      "createShareableERC721Proxy",
      "createShareableERC721Proxy(string,string,address):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_symbol),
        ethereum.Value.fromAddress(_owner)
      ]
    );

    return result[0].toAddress();
  }

  try_createShareableERC721Proxy(
    _name: string,
    _symbol: string,
    _owner: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createShareableERC721Proxy",
      "createShareableERC721Proxy(string,string,address):(address)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_symbol),
        ethereum.Value.fromAddress(_owner)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  endorsableProxyNameExists(_name: string): boolean {
    let result = super.call(
      "endorsableProxyNameExists",
      "endorsableProxyNameExists(string):(bool)",
      [ethereum.Value.fromString(_name)]
    );

    return result[0].toBoolean();
  }

  try_endorsableProxyNameExists(_name: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "endorsableProxyNameExists",
      "endorsableProxyNameExists(string):(bool)",
      [ethereum.Value.fromString(_name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getIndexForEndorseERC721ProxyInstance(): BigInt {
    let result = super.call(
      "getIndexForEndorseERC721ProxyInstance",
      "getIndexForEndorseERC721ProxyInstance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getIndexForEndorseERC721ProxyInstance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getIndexForEndorseERC721ProxyInstance",
      "getIndexForEndorseERC721ProxyInstance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getIndexForLikeERC721ProxyInstance(): BigInt {
    let result = super.call(
      "getIndexForLikeERC721ProxyInstance",
      "getIndexForLikeERC721ProxyInstance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getIndexForLikeERC721ProxyInstance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getIndexForLikeERC721ProxyInstance",
      "getIndexForLikeERC721ProxyInstance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getIndexForShareableERC721ProxyInstance(): BigInt {
    let result = super.call(
      "getIndexForShareableERC721ProxyInstance",
      "getIndexForShareableERC721ProxyInstance():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getIndexForShareableERC721ProxyInstance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getIndexForShareableERC721ProxyInstance",
      "getIndexForShareableERC721ProxyInstance():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  likeableProxyNameExists(_name: string): boolean {
    let result = super.call(
      "likeableProxyNameExists",
      "likeableProxyNameExists(string):(bool)",
      [ethereum.Value.fromString(_name)]
    );

    return result[0].toBoolean();
  }

  try_likeableProxyNameExists(_name: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "likeableProxyNameExists",
      "likeableProxyNameExists(string):(bool)",
      [ethereum.Value.fromString(_name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  shareableProxyNameExists(_name: string): boolean {
    let result = super.call(
      "shareableProxyNameExists",
      "shareableProxyNameExists(string):(bool)",
      [ethereum.Value.fromString(_name)]
    );

    return result[0].toBoolean();
  }

  try_shareableProxyNameExists(_name: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "shareableProxyNameExists",
      "shareableProxyNameExists(string):(bool)",
      [ethereum.Value.fromString(_name)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _shareableTokenBeacon_vLogic(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _likeTokenBeacon_vLogic(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _endorseTokenBeacon_vLogic(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateEndorseERC721ProxyCall extends ethereum.Call {
  get inputs(): CreateEndorseERC721ProxyCall__Inputs {
    return new CreateEndorseERC721ProxyCall__Inputs(this);
  }

  get outputs(): CreateEndorseERC721ProxyCall__Outputs {
    return new CreateEndorseERC721ProxyCall__Outputs(this);
  }
}

export class CreateEndorseERC721ProxyCall__Inputs {
  _call: CreateEndorseERC721ProxyCall;

  constructor(call: CreateEndorseERC721ProxyCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class CreateEndorseERC721ProxyCall__Outputs {
  _call: CreateEndorseERC721ProxyCall;

  constructor(call: CreateEndorseERC721ProxyCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateLikeERC721ProxyCall extends ethereum.Call {
  get inputs(): CreateLikeERC721ProxyCall__Inputs {
    return new CreateLikeERC721ProxyCall__Inputs(this);
  }

  get outputs(): CreateLikeERC721ProxyCall__Outputs {
    return new CreateLikeERC721ProxyCall__Outputs(this);
  }
}

export class CreateLikeERC721ProxyCall__Inputs {
  _call: CreateLikeERC721ProxyCall;

  constructor(call: CreateLikeERC721ProxyCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class CreateLikeERC721ProxyCall__Outputs {
  _call: CreateLikeERC721ProxyCall;

  constructor(call: CreateLikeERC721ProxyCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateShareableERC721ProxyCall extends ethereum.Call {
  get inputs(): CreateShareableERC721ProxyCall__Inputs {
    return new CreateShareableERC721ProxyCall__Inputs(this);
  }

  get outputs(): CreateShareableERC721ProxyCall__Outputs {
    return new CreateShareableERC721ProxyCall__Outputs(this);
  }
}

export class CreateShareableERC721ProxyCall__Inputs {
  _call: CreateShareableERC721ProxyCall;

  constructor(call: CreateShareableERC721ProxyCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _owner(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class CreateShareableERC721ProxyCall__Outputs {
  _call: CreateShareableERC721ProxyCall;

  constructor(call: CreateShareableERC721ProxyCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
