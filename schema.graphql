type Project @entity {
  id: ID! #project name
  operators: [Bytes!]! # addresses
  shareableContractAddress: Bytes
  likeContractAddress: Bytes
  endorseContractAddress: Bytes
  categories: [Category!]!
}

type Category @entity {
  id: ID! #name of category
}

type Token @entity {
  id: ID!
  ownerAddress: Bytes!
  contractAddress: Bytes!
  metadataUri: String
  project: Project!
  isOriginal: Boolean! #token is original minted by the project admin
  isSharedInstance: Boolean! #token was shared by the parent token owner with a 3rd person
  isOriginalOrShared: Boolean! #combination of 2 fields isOriginal or isSharedInstance
  isLikeToken: Boolean! #token represent like of an original or shared token
  
  tokenId: BigInt
  parentTokenId: BigInt #parent of a shared token

  parentToken: Token # parent token a permissioned shared token was derived from
  sharedChildTokens: [Token!]! @derivedFrom(field: "parentToken") # tokens from permissioned sharing
  
  likedParentToken: Token
  likeTokens: [Token!]! @derivedFrom(field: "likedParentToken") # tokens from that have liked this token

  category: Category!
}


